pipeline {
    agent any
    tools {
        // Note: this should match with the tool name configured in your jenkins instance (JENKINS_URL/configureTools/)
        maven "Maven"
          }
    stages {
        stage("Build") {
            steps {
                script {
                    // Let's clone the source
                    git 'https://github.com/sivakumar46/spring3-mvc-maven-xml-hello-world.git'
					
					//Run Maven on a Unix agent
					//sh "mvn package"
					
					//To run Maven on a Windows agent, use
					bat "\mvn -Dmaven.test.failure.ignore=true clean package"
                      }
				post {
				// If Maven was able to run the tests, eben if some of the test 
				//failed, record the test results and archive the jar file.
				success {
				archiveArtifacts 'target/*.war'
				        }
                    }
                 }
				        }
						
	 stage('deploy'){
	     steps {
		     echo 'deployment started'
       bat '''copy C:\\Users\\Administrator\\.jenkins\\workspace\\pipelinesyntax\\target\\*.war C:\\Users\\Administrator\\Documents\\apache-tomcat-7.0.99\\webapps\\'''
               }
		           }
		Stage ('success'){
			steps {
				script {
					currentBuild.result ='SUCCESS'
					   }
				  }
			             }
		}
		
		post {
			failure {
				script {
				currentBuild.result = 'FAILURE'
				}
			}
			
			always {
			step([$class: 'Mailer',
				notifyEveryUnstableBuild: true,
				recipients: "cvathebeastrider@gmail.com",
				sendToIndividuals: true])
		}
	}
}